function(collection, id, key, timing) {
  var count_key     = (key ? key + "." : '') + "_count";
  var mean_key      = (key ? key + "." : '') + "_mean";
  var square_key    = (key ? key + "." : '') + "_square";
  var deviation_key = (key ? key + "." : '') + "_stddev";
  var collection = db[collection];
  var doc = collection.findOne({_id: id});

  if (!doc) {
    doc = {_id: id};
    collection.save(doc);
  }

  var old_count = nested_value(doc,count_key)  || 0;
  var old_mean  = nested_value(doc,mean_key);
  var old_square= nested_value(doc, square_key);

  var new_count, new_mean, new_square;

  if (old_count === 0) {
    new_mean = timing;
    new_square = 0;
    new_count  = 1;
  } else {
    new_count   = old_count + 1;
    new_mean    = old_mean   + ( timing - old_mean) / (new_count);
    new_square  = old_square + ( timing - old_mean) * ( timing - new_mean);
  }

  var deviation =   (new_count > 1) ? new_square / (new_count-1) : 0;

  var update = {};
  update[mean_key] = new_mean;
  update[count_key] = new_count;
  update[square_key] = new_square;
  update[deviation_key] = deviation;

  collection.update(doc, {$set : update });

  return update;
}
