== Welcome to TrueStack

We give you insight into your code, what makes it slow, how it is faring, etc. over time / deploys.


== Displaying
On index page, you view the 'latest' deploy.

It shows you the
* req / s
* the % of time spent in the DB
* the % of time spent in the view (how many DB calls in there)
* the % of time spent in the controllers
* the % of time spent in the models
* the # of exceptions overall (and a quick ability to list them (stacktrace, name, line / file, inside what action)
* All the requests show a variance rating -- how variable are the request times.
* your overall performance rating compared to last deploy.
* A selector to hop back to previous deploys
Sections below that:
* the slowest action (Laggin')
* the most used action ( Popular)
* the trending action -- which are faster / slower (Trendy)
* the actions never hit (Lonely)
* the buggiest action (most exceptions)

* Can click on any individual action that you see - and see the heat map 'stack trace'.
* Sort it simply by most time used -> least time used.  Want to focus on most important thing to speed up.
* darker 'tigher' timings indicate less variable actions. Want consistent actions (if possible).

* When viewing a single action - you can say 'compare to previous deploys'.  And we'll have some diff ability to show the difference between the current and past 10 or so deploys (or month or something)

* Deployment indicator needs to tell us the names of all the public controller methods, so we can put them in the list from the get-go and know which are never hit.

== Tasks

=== ToDo
* on apps show page - sho latest deployment stats (as above in reqts).  show deployment page and give the stats we want -- adding model methods.
* refactor into access_token authorized request (returns true or raises the error)
* show alerts from the deployment
* allow hook for deployments to POST and create new deployments
* show action heatmap graph when clicking on a request
* write server client
* write browser helper
* write fake apps we can install on in heroku - which then poke each other to create tons of traffic in random ways
* login
* payment?
* graphic design? Backbone UI / standard HTML / etc etc?
* configure DNS and email truestack.com
* setup truestack blog
* truestack twitter ? chris?

=== Done
* twitter-bootstrap styles installed.
* add initial index action for deployments  - you can see this on /apps
* webhook does same as websocket.
* get enqueue task done from websocket

=== Icebox
* Let people define a code path as a given 'action'. Even though it is not a top-level action.
* API for external services to query deployments and data
* Custom metrics and way to graph / chart them (or just in the API?)
* support A/B testing
